version: '3'

volumes:
  cache:
    driver: local
  db-data:
    driver: local
  minio-data:
    driver: local

services:
  app:
    build:
      context: .
    container_name: tasklist
    depends_on:
      - db
      - minio
      - redis
    env_file:
      - .env  # Указываем файл .env для контейнера
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DATABASE}?currentSchema=${POSTGRES_SCHEMA}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '8080:8080'

  db:
    image: postgres:15.1-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    volumes:
      - ./src/main/resources/db-init:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgres

  redis:
    image: redis:7.2-rc-alpine
    restart: always
    container_name: redis
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    command: server ~/minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - minio-data:/minio
